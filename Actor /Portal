import greenfoot.*;

public class Portal extends Actor {

    public Portal() {
        // Portal ini dibuat tidak terlihat agar menyatu dengan game
        getImage().setTransparency(0);

        // Tips: Jika Anda ingin melihat posisi portal saat mendesain level,
        // hapus sementara tanda komentar di bawah ini.
    }

    public void act() {
        // Cek apakah ada objek Knight yang menyentuh portal ini
        Knight knight = (Knight) getOneIntersectingObject(Knight.class);

        // Jika Knight terdeteksi menyentuh portal
        if (knight != null) {

            // >>> TAMBAHKAN BARIS INI UNTUK MENGHENTIKAN SUARA LARI KNIGHT <<<
            knight.stopAllSounds(); // Memanggil metode di kelas Knight untuk menghentikan suara looping

            // Mengambil referensi ke world saat ini
            GameWorld worldSaatIni = (GameWorld) getWorld();

            // Mengambil data skor dan nyawa dari world saat ini
            int skorSekarang = worldSaatIni.getScore();
            int nyawaSekarang = worldSaatIni.getLives();

            // Tentukan stage berikutnya berdasarkan stage saat ini
            if (worldSaatIni instanceof Stage1_Desa) {
                Greenfoot.setWorld(new Stage2_Arena(skorSekarang, nyawaSekarang));

            } else if (worldSaatIni instanceof Stage2_Arena) {
                Greenfoot.setWorld(new Stage3_Perbatasan(skorSekarang, nyawaSekarang));

            } else if (worldSaatIni instanceof Stage3_Perbatasan) {
                // Setelah stage terakhir, pindah ke layar Game Over (yang akan menampilkan kemenangan)
                Greenfoot.setWorld(new LayarGameOver(skorSekarang));
                Greenfoot.stop(); // Hentikan game setelah menang
            }
        }
    }
}
