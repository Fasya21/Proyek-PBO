import greenfoot.*;

public class Stage2_Arena extends World {
    // Ukuran disesuaikan dengan gambar Arena.jpg (perkiraan)
    private static final int LEBAR = 1024;
    private static final int TINGGI = 576;
    
    // Variabel untuk UI
    private int score;

    public Stage2_Arena() {
        super(LEBAR, TINGGI, 1);
        
        // Siapkan background dengan metode scaling agar pas
        GreenfootImage background = new GreenfootImage("Arena.jpg");
        background.scale(getWidth(), getHeight());
        setBackground(background);
        
        // Panggil metode untuk menata level dan UI
        tataLevel();
        siapkanUI();
        
        setPaintOrder(Knight.class, Musuh.class, Portal.class, Platform.class);
    }
    
    /**
     * Metode untuk menata semua platform, karakter, dan musuh.
     */
    private void tataLevel() {
        // Tempatkan platform tak terlihat sesuai dengan gambar Arena.jpg
        
        // Lantai dasar
        addObject(new Platform(LEBAR, 20), LEBAR / 2, 545);
        
        // Pijakan di atas bangunan tengah (arena utama)
        addObject(new Platform(250, 20), 470, 420); // Lantai tengah
        
        // Pijakan di sisi kiri
        addObject(new Platform(170, 20), 170, 420);
        addObject(new Platform(70, 20), 70, 315);
        // Pijakan di sisi kanan
        addObject(new Platform(150, 20), 760, 420);
        addObject(new Platform(100, 20), 845, 475);
        // Pijakan di atap
        addObject(new Platform(750, 10), 500, 245);
        
        // Tempatkan Knight di awal level (misal di kiri bawah)
        addObject(new Knight(), 100, 500);
        
        // Tempatkan beberapa musuh di lokasi yang menantang
        addObject(new Musuh(), 450, 390); // Musuh di lantai 2 tengah arena
        addObject(new Musuh(), 600, 520);  // Musuh di lantai tengah arena
        addObject(new Musuh(), 1000, 520); // Musuh di lantai paling kanan
        addObject(new Musuh(), 670, 225); // Musuh di atap
        addObject(new Musuh(), 370, 225); // Musuh di atap
        // Tempatkan Portal tujuan di bagian paling kanan
        addObject(new Portal(), 1024, 540);
    }
    
    /**
     * Metode untuk menyiapkan tampilan UI awal.
     */
    private void siapkanUI() {
        // Tampilkan nama stage di pojok kiri atas
        showText("Stage 2: Arena Ujian", 150, 30);
        
        // Atur skor awal dan tampilkan
        score = 0;
        updateScoreDisplay();
    }
    
    /**
     * Metode untuk menambah skor.
     */
    public void addScore(int points) {
        score = score + points;
        updateScoreDisplay();
    }
    
    /**
     * Metode untuk memperbarui tampilan skor di layar.
     */
    private void updateScoreDisplay() {
        // Hapus teks lama dengan menggambar kotak warna background di atasnya
        getBackground().setColor(new Color(66, 70, 77)); // Warna background Arena.jpg (perkiraan)
        getBackground().fillRect(LEBAR - 200, 10, 180, 40);
        
        // Tampilkan teks skor yang baru
        getBackground().setColor(Color.WHITE);
        getBackground().drawString("Skor: " + score, LEBAR - 150, 30);
    }
}
